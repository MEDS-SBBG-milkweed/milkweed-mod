---
title: "Rescale all layers for accessibility index to 0-1"
date-created: 04-09-2024
date-last-updated: 04-09-2024
---

This document's purpose is to rescale all layers for our accessibility raster to a scale of 0-1 (0 = least accessible, 1 = most accessible) and set to same extent, CRS, and resolution.

# Set up

## Source Scripts
```{r, message = FALSE}
# reads in all data we need
# takes a minute because reprojects slope to correct CRS
source("../scripts/accessibility_setup.R")
```

# Rescale Layers

## Canopy Cover
```{r}
min_max_cc <- minmax(canopy_cover) 
# (value - minimum_vale) / (maximum_value - minimum_value)
canopy_rescaled <- (canopy_cover - min_max_cc[1,]) / (min_max_cc[2,] - min_max_cc[1,])

# check that max = 1 and min = 0
plot(canopy_rescaled)
```

## Slope
```{r}
min_max_slope <- minmax(slope) 
# (value - minimum_vale) / (maximum_value - minimum_value)
slope_rescaled <- (slope - min_max_slope[1,]) / (min_max_slope[2,] - min_max_slope[1,])

#slope_rescaled_reproject <- project(slope_rescaled, temp_rast4)
# maybe maximum for accessibility so we're not losing the high slopes?
plot(slope_rescaled)
#plot(slope_rescaled_reproject)
```

## Distance from Trails
```{r}

```


## Distance from Roads
```{r}

```


## Land Ownership

For land ownership, we want a mask where 0 indicates private land and 1 indicates public land.

The data is a shape file with each row indicating geometry of public land, so I am first creating a column of 1s to indicate public land, then rasterizing using a template raster. 
```{r}
# make mask where 1 is public land and 0 is private land
lpnf_ownership_mask1 <- lpnf_ownership %>% 
  # new column of 1s
  mutate(ownership = rep(1, length(lpnf_ownership$OWN_LEVEL))) %>% 
  # remove original ownership level column
  dplyr::select(-OWN_LEVEL)

#rasterize lpnf_ownership
ownership_rasterize<- st_rasterize(lpnf_ownership_mask1, 
                                   template = temp_rast_stars) # align=TRUE supposed to not keep template values but not working
# align error: "Error in rep_len(x, prod(dim)) : invalid 'length.out' value"

ownership_rast <- rast(ownership_rasterize)

plot(ownership_rast)
```

When I was using the model output as a template, the rasterize function kept values from the template when rasterizing and I had to do an extra step, but now that I am using the template that is all 0s, the extra step is no longer needed.
```{r}
# ## From stackoverflow: "if `template` is a `stars` object, non-NA cells that are not covered by `sf` receive the value in `template`; see also argument `align`."
# 
# # now the raster has values between 0 and 1, but I want only 0 and 1
# plot(ownership_rast)
# 
# ## After reading and plotting different things, it looks like any area in the template that the land ownership DIDN'T cover was kept as the value in the template raster. So I am going to try to replace any values that don't equal 1 to 0
# 
# ownership_rast[ownership_rast<1] <- 0
# 
# plot(ownership_rast)
```

# Set everything to same resolution, extent, and CRS

CRS: EPSG 4326

```{r}
# this are the resolution, extent, and crs we want from the template
res(temp_rast) # 0.008333333 0.008333333
ext(temp_rast) # -122.01324133097, -117.47990817897, 33.679743833477, 36.921410370477 (xmin, xmax, ymin, ymax)
crs(temp_rast) # 4326
origin(temp_rast) # 0.003420455, -0.003588153
```

```{r}
# this are the resolution, extent, and crs we want from the template
res(temp_rast4) # 0.008333333 0.008333333
ext(temp_rast4) # -122.01324133097, -117.479907997637, 33.679743833477, 36.9214105001436 (xmin, xmax, ymin, ymax)
crs(temp_rast4) # 4326
origin(temp_rast4) # 0.003425336 -0.003589500
```


## Initial Check


### CRS
```{r}
# canopy cover
print("Does canopy_rescaled have correct CRS?")
st_crs(canopy_rescaled) == st_crs(temp_rast2)

# slope
print("Does slope_rescaled have correct CRS?")
st_crs(slope_rescaled) == st_crs(temp_rast2)

# distance from trails
print("Does distance_trails_rescaled have correct CRS?")
#st_crs(canopy_rescaled) == st_crs(temp_rast2)

# distance from roads
print("Does distance_raods_rescaled have correct CRS?")
#st_crs(canopy_rescaled) == st_crs(temp_rast2)

# land ownership
print("Does ownership_rast have correct CRS?")
st_crs(ownership_rast) == st_crs(temp_rast2)
```

#### Reproject
```{r}
slope_rescaled <- project(slope_rescaled,
                          crs(temp_rast))
# verify
print("Does slope_rescaled have correct CRS?")
st_crs(slope_rescaled) == st_crs(temp_rast2)
```

### Resolution
```{r}
# canopy
print("Does canopy_rescaled have the correct resolution?")
res(canopy_rescaled) == res(temp_rast2)

# slope
print("Does slope_rescaled have the correct resolution?")
res(slope_rescaled) == res(temp_rast2)

# distance from trails
print("Does canopy_rescaled have the correct resolution?")
#res(canopy_rescaled) == res(temp_rast2)

# distance from roads
print("Does canopy_rescaled have the correct resolution?")
#res(canopy_rescaled) == res(temp_rast2)

# land ownership
print("Does ownership_rast have the correct resolution?")
res(ownership_rast) == res(temp_rast2)
```
#### Update any resolutions
```{r}
res(canopy_rescaled)
res(temp_rast2)

```


### Extent
```{r}
# canopy 
print("Does canpy_rescaled have the correct extent?")
ext(canopy_rescaled) == ext(temp_rast2)

# slope 
print("Does slope_rescaled have the correct extent?")
ext(slope_rescaled) == ext(temp_rast2)

# distance from trails 
print("Does canpy_rescaled have the correct extent?")
#ext(canopy_rescaled) == ext(temp_rast2)

# distance from roads 
print("Does canpy_rescaled have the correct extent?")
#ext(canopy_rescaled) == ext(temp_rast2)

# land ownership 
print("Does ownership_rast have the correct extent?")
ext(ownership_rast) == ext(temp_rast2)
```

```{r}
# need to look closely at these plots, slope looks more zoomed out than template even when same crs and extent
ext(slope_rescaled) <- ext(temp_rast2)
ext(canopy_rescaled) <- ext(temp_rast2)
plot(temp_rast2)
plot(slope_rescaled_reproject)
plot(canopy_rescaled)
plot(slope_rescaled)
```

4/11/24
Noticed some funky things going on with the slope raster: After rescaling, then manually converting crs and extent to match that of the template raster (`project(slope_rescaled, crs(temp_rast2))` and `ext(slope_rescaled <- ext(temp_rast2))`), the coastline of slope looked way more zoomed out than that of the template raster (like if I were to plot them on top of each other it would not line up). However, if I instead rescale slope and then `project(slope_rescaled, temp_rast2)`, therefore converting CRS, resolution, and extent of slope to that of the temp raster all in one, the coastline match up. The problem with this is that we are downsampling (?) slope becuase it is a much higher resolution than that of the template raster, and we end up with a scale of 0 to 0.6 instead of 0 to 1. **So now I need to look at the method downsampling and choose which one--nearest neighbor, sum, mode, mean?**
