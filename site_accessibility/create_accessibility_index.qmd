---
title: "Creating the final accessibility index"
---

```{r}
library(terra)
library(here)
# source rescale_raster function
source(here("R", "rescale_raster.R"))
```


# Creating the final index by multiplying together all the individual, rescaled layers

## Read in layers
```{r}
canopy <- rast(here("~/../../capstone/milkweedmod/outputs/site_accessibility_outputs/canopy_rescaled.tif"))
slope <- rast(here("~/../../capstone/milkweedmod/outputs/site_accessibility_outputs/slope_rescaled.tif"))
trails <- rast(here("~/../../capstone/milkweedmod/outputs/site_accessibility_outputs/trails_rescaled.tif"))
roads <- rast(here("~/../../capstone/milkweedmod/outputs/site_accessibility_outputs/roads_rescaled.tif"))
ownership <- rast(here("~/../../capstone/milkweedmod/outputs/site_accessibility_outputs/ownership_rescaled.tif"))
```


```{r}
access_index <- canopy * slope * ownership * trails * roads
plot(access_index)
```

# Rescale accessibility index for a final index from 0 - 1

```{r}
access_index_final <- rescale_raster(access_index)

plot(access_index_final)
```
# Save final accessibility index
```{r}
# writeRaster(access_index_final, here("~/../../capstone/milkweedmod/outputs/site_accessibility_outputs/access_index_final.tif"), overwrite = TRUE)
```

# Save final accessibility index to GitHub

# plot accessibility 
```{r}
access_index <- rast(here("~/../../capstone/milkweedmod/outputs/site_accessibility_outputs/access_index_final.tif"))
lpnf_boundary <- st_read(here("~/../../capstone/milkweedmod/clean_data/lpnf_boundary/lpnf_boundary/lpnf_boundary.shp"),
                         quiet = TRUE)

library(leaflet)
library(wallace)
source(here("R", "addLegend_decreasing.R"))

accessVals <- getRasterVals(access_index) # change for different types

pal_access <- c("#FFFFFF","#CCD4EF", "#99A9DF", "#667FD0", "#3354C0", "#0029B0")

legendPal <- colorNumeric(pal_access, accessVals, na.color = 'transparent')
rasPal <- colorNumeric(pal_access, accessVals, na.color = 'transparent')


accessibility_index_leaflet <- leaflet(options = leafletOptions(zoomControl = FALSE)) %>%
  
  addProviderTiles(providers$Esri.WorldTerrain) %>%
  addLegend_decreasing("bottomleft", pal = legendPal, values = accessVals,
                       labFormat = reverseLabel(), decreasing = TRUE,
                       title = "Accessibility Index") %>%
  # map model prediction raster and transfer polygon
  addRasterImage(access_index, colors = rasPal,
                 method = "ngb") %>%
  
  # #add transfer polygon (user drawn area)
  addPolygons(data = lpnf_boundary, fill = FALSE,
              weight = 2, color = "black", group = 'xfer') %>% 
  addScaleBar(position = "topleft")

accessibility_index_leaflet

```

## save leaflet as png
```{r}
library(mapview)

## 'leaflet' objects (image above)
# need to install PhantomJS with webshot::install_phantomjs()
mapshot(accessibility_index_leaflet, file = here("~/access_index_leaflet.png"))

## 'mapview' objects (image below)
m2 <- mapview(breweries91)
mapshot(m2, file = "~/breweries.png")
```

