---
title: "LPNF Boundary and Trails/Roads"
author: "Amanda"
---

Load packages
```{r}
library(tidyverse)
library(sf)
library(here)
library(mapdata)
```

Read in data
```{r}
# California National Forest boundaries
boundary <- st_read(here("~/../../capstone/milkweedmod/data/lpnf_boundary_data/S_USA_AdministrativeForest.gdb/"))

trails <- st_read(here("~/../../capstone/milkweedmod/data/2023_Regional_Trails_and_Roads_lines/2023_Regional_Trails_and_Roads_lines.shp"))
```

Filter boundaries to Los Padres National Forest
```{r}
lpnf_boundary <- boundary %>% 
  filter(FORESTNAME %in% c("Los Padres National Forest"))

forest_buffer <- lpnf_boundary  %>%
  st_buffer(dist = 1000)

#st_crs(forest_buffer) <- st_crs("EPSG:4326") # this format does not reproject the data

forest_buffer <- st_transform(forest_buffer, crs = st_crs("EPSG:4326"))

 #st_write(lpnf_boundary, here("~/../../capstone/milkweedmod/data/lpnf_boundary_data/lpnf_boundary/lpnf_boundary.shp"))
 # st_write(forest_buffer,
 #          here("~/../../capstone/milkweedmod/data/lpnf_boundary_data/lpnf_boundary_buffered/lpnf_boundary_buffered.shp"),
 #          append = FALSE)
 
```
## Finding max-y for southern section

```{r}

ggplot() +
  geom_sf(data = forest_buffer)

# select 35.6 as max-y for subselection of southern portion! 
```

```{r}
# Create a bounding box 
bbox_south <- st_bbox(c(xmin = -118, ymin = 34.2, xmax = -121, ymax = 35.5),  crs = st_crs(4269))
bbox_north <- st_bbox(c(xmin = -122, ymin = 35.5, xmax = -121, ymax = 36.5),  crs = st_crs(4269))

# Crop boundary
lpnf_south <- st_crop(lpnf_boundary, bbox_south)
lpnf_north <- st_crop(lpnf_boundary, bbox_north)


ggplot() +
  geom_sf(data = lpnf_north, color = "blue4") +
  geom_sf(data = lpnf_south, color = "green4")
```



Reproject all data to EPSG: 2230 for California Zone 6 (area of interest) 
```{r}
# reprojecting both datasets' crs to EPSG: 2230 for California Zone 6 (area of interest) 
lpnf_reprojected <- lpnf_boundary |> st_transform(crs = "EPSG:2230")

# reproject milkweed data
trails_reprojected <- trails |> st_transform(crs = st_crs(lpnf_reprojected))

# check if CRS match
st_crs(lpnf_reprojected) == st_crs(trails_reprojected)
```

Prepare data for plotting
```{r}
# drop Z and/or M dimensions from trails data
# was getting error: "number of columns of matrices must match (see arg 9)"
trails_reprojected <- st_zm(trails_reprojected)
```

Plot trails and lpnf boundary
```{r}
# make basemap
ca <- map_data("state") %>% 
  filter(region == "california")
ca_sf <- st_as_sf(ca,
                  coords = c("long", "lat"),
                  crs = "epsg:4326") %>% 
  summarise(geometry = st_combine(geometry)) %>%
  st_cast("POLYGON")
ca_reprojected <- ca_sf %>% st_transform(crs = st_crs(lpnf_reprojected))

# create bbox around lpnf
lpnf_bb <- st_bbox(lpnf_reprojected)

# plot!
ggplot() +
  geom_sf(data = ca_sf, fill = "lightgreen", color = "black") +
  geom_sf(data = lpnf_reprojected,
          color = "darkgreen",
          fill = "transparent",
          lwd = 1) + 
  geom_sf(data = trails_reprojected,
          aes(color = Type)) +
  coord_sf(xlim = c(lpnf_bb[1], lpnf_bb[3]),
           ylim = c(lpnf_bb[2], lpnf_bb[4])) +
  # geom_polygon(data = ca, aes(x = long, y = lat),
  #              fill = "lightgray", color = "black") +
  # coord_sf(crs = "epsg:2230") +
  labs(x = "Longitude",
       y = "Latitude") +
  theme_bw()
```

```{r}
# attempt with basemap


```

